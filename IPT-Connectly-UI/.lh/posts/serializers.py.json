{
    "sourceFile": "posts/serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1737300037137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1737300037137,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\r\nfrom .models import User, Post, Comment\r\n\r\nclass UserSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = User\r\n        fields = ['id', 'username', 'email', 'created_at']\r\n\r\nclass PostSerializer(serializers.ModelSerializer):\r\n    comments = serializers.StringRelatedField(many=True, read_only=True)\r\n\r\n    class Meta:\r\n        model = Post\r\n        fields = ['id', 'content', 'author', 'created_at', 'comments']\r\n\r\n\r\nclass CommentSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Comment\r\n        fields = ['id', 'text', 'author', 'post', 'created_at']\r\n\r\n\r\n    def validate_post(self, value):\r\n        if not Post.objects.filter(id=value.id).exists():\r\n            raise serializers.ValidationError(\"Post not found.\")\r\n        return value\r\n\r\n    def validate_author(self, value):\r\n        if not User.objects.filter(id=value.id).exists():\r\n            raise serializers.ValidationError(\"Author not found.\")\r\n        return value\r\n"
        }
    ]
}